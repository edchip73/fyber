Dicas Python em PHP

pip install python-docx

***********************************

from flask import Flask, request, render_template, send_file, flash, redirect, url_for
from docx import Document
import os

app = Flask(__name__)
app.secret_key = 'some_secret_key'

# Simulação de dados do cliente (substitua por banco de dados real)
clientes = [
    {
        'id': 1,
        'nome': 'João Silva',
        'doc': '123456789',
        'tel': '123456789',
        'email': 'joao@example.com',
        'end': 'Rua A',
        'num': '123',
        'bairro': 'Centro',
        'cidade': 'Cidade A',
        'uf': 'UF'
    },
    {
        'id': 2,
        'nome': 'Maria Souza',
        'doc': '987654321',
        'tel': '987654321',
        'email': 'maria@example.com',
        'end': 'Rua B',
        'num': '456',
        'bairro': 'Bairro B',
        'cidade': 'Cidade B',
        'uf': 'UF'
    }
]

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        nome = request.form['nome']
        matching_clients = [cliente for cliente in clientes if nome.lower() in cliente['nome'].lower()]

        if not nome:
            flash('Preencha o nome para emitir o contrato.', 'error')
        elif len(matching_clients) == 0:
            flash('Nenhum cliente encontrado.', 'error')
        elif len(matching_clients) > 1:
            flash('Mais de um cliente encontrado. Por favor, refine sua busca.', 'error')
        else:
            cliente = matching_clients[0]
            return gerar_contrato(cliente)

    return render_template('index.html')

def gerar_contrato(cliente):
    template_path = 'templates/contrato_template.docx'
    temp_doc_path = 'temp/contrato.docx'

    document = Document(template_path)
    for paragraph in document.paragraphs:
        for key, value in cliente.items():
            if f'{{{{ {key} }}}}' in paragraph.text:
                paragraph.text = paragraph.text.replace(f'{{{{ {key} }}}}', str(value))

    document.save(temp_doc_path)

    return send_file(temp_doc_path, as_attachment=True, download_name='contrato.docx')

if __name__ == '__main__':
    if not os.path.exists('temp'):
        os.makedirs('temp')
    app.run(debug=True)

***********************************
Criar um template do Word (contrato_template.docx) com marcadores de posição para substituição. Os marcadores de posição devem estar no formato {{ campo }}, por exemplo:

Nome: {{ nome }}
Documento: {{ doc }}
Telefone: {{ tel }}
Email: {{ email }}
Endereço: {{ end }}
Número: {{ num }}
Bairro: {{ bairro }}
Cidade: {{ cidade }}
UF: {{ uf }}

***************************************
Criar um template HTML (index.html) para o formulário de busca:

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Geração de Contratos</title>
</head>
<body>
    <h1>Geração de Contratos</h1>
    <form method="post">
        <label for="nome">Nome:</label>
        <input type="text" id="nome" name="nome">
        <button type="submit">Emitir Contrato</button>
    </form>
    {% with messages = get_flashed_messages(with_categories=true) %}
      {% if messages %}
        <ul>
          {% for category, message in messages %}
            <li class="{{ category }}">{{ message }}</li>
          {% endfor %}
        </ul>
      {% endif %}
    {% endwith %}
</body>
</html>


******************************************

python3 generate_contract.py '{"nome": "João", "doc": "123456", "tel": "9999-9999", "email": "joao@example.com", "end": "Rua A", "num": "123", "bairro": "Centro", "cidade": "Cidade", "uf": "UF"}'
